apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "boots.fullname" . }}
  labels:
    {{- include "boots.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "boots.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "boots.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "boots.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: BOOTS_EXTRA_KERNEL_ARGS
            value: tink_worker_image=quay.io/tinkerbell/tink-worker:latest
          - name: DATA_MODEL_VERSION
            value: kubernetes
          - name: FACILITY_CODE
            value: lab1
          - name: HTTP_BIND
            value: 0.0.0.0:8080
          - name: PUBLIC_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: MIRROR_BASE_URL
            value: "http://$(PUBLIC_IP):8080"
          - name: PUBLIC_FQDN
            value: "$(PUBLIC_IP):8080"                
          - name: TINKERBELL_GRPC_AUTHORITY
            value: tink-server.tink-system:42113
          - name: TINKERBELL_TLS
            value: "false"
          args:
           - -log-level
           - debug
           - dhcp-addr
           - 0.0.0.0:67
          ports:
            - name: dhcp
              containerPort: 67
              protocol: UDP
            - name: tftp
              containerPort: 69
              protocol: UDP
            - name: syslog
              containerPort: 514
              protocol: UDP
            - name: http
              containerPort: 8080
              protocol: TCP                            
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
